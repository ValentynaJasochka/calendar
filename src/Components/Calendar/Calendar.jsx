import { CalendarTable, DayWrapper } from "./Calendar.styled";

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ —É —Å—Ç–∏–ª—ñ "Month Day, Year"
const formatDateLong = (date) =>
  date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });

// –û—Ç—Ä–∏–º—É—î–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—é –¥–∞—Ç—É (–±–µ–∑ —á–∞—Å—É)
const today = new Date();
today.setHours(0, 0, 0, 0);

// –ü–µ—Ä—à–∏–π –¥–µ–Ω—å –ø–æ—Ç–æ—á–Ω–æ–≥–æ –º—ñ—Å—è—Ü—è
const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
// üîπ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ —É –º—ñ—Å—è—Ü—ñ
const daysInMonth = new Date(
  today.getFullYear(),
  today.getMonth() + 1,
  0
).getDate();

// üîπ –≥–µ–Ω–µ—Ä—É—î–º–æ —Ç–æ—á–Ω–∏–π –º–∞—Å–∏–≤ –¥–Ω—ñ–≤
const daysArray = [...Array(daysInMonth)].map((_, i) => {
  const d = new Date(firstDayOfMonth);
  d.setDate(firstDayOfMonth.getDate() + i);
  return d;
});

export const Calendar = () => {
  return (
    <CalendarTable>
      {daysArray.map((dayItem) => {
        const isWeekend = dayItem.getDay() === 0 || dayItem.getDay() === 6; // –Ω–µ–¥—ñ–ª—è –∞–±–æ —Å—É–±–æ—Ç–∞
        const isToday = dayItem.getTime() === today.getTime();

        return (
          <DayWrapper
            key={dayItem.toISOString()}
            isWeekend={isWeekend}
            today={isToday}
          >
            <div>{formatDateLong(dayItem)}</div>
            <div>Tasks</div>
          </DayWrapper>
        );
      })}
    </CalendarTable>
  );
};
